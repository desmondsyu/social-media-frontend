# Stage 1: Build the React app
FROM node:16.3.0-alpine AS build

WORKDIR /app

# Copy package.json and install dependencies
COPY package.json package-lock.json ./
RUN npm install

# Copy the rest of the app's source code
COPY . .

# Ensure react-scripts has the right permissions
RUN chmod +x ./node_modules/.bin/react-scripts

# Build the app
RUN npm run build

# Stage 2: Serve the app with Nginx
FROM nginx:alpine

# Copy the build output to Nginx's default static directory
COPY --from=build /app/build /usr/share/nginx/html

# Copy the custom Nginx configuration if needed
# COPY custom-nginx.template /etc/nginx/conf.d/

# Add permissions for the script
WORKDIR /usr/local/bin
COPY generate-config.sh .
RUN chmod +x generate-config.sh

# Expose port 80 and set the entrypoint
EXPOSE 80
ENTRYPOINT [ "/bin/sh", "generate-config.sh" ]

# # docker for development
# # Use an official Node runtime as a parent image
# FROM node:20

# # Set the working directory to /app
# WORKDIR /app

# # Copy the package.json and package-lock.json to the working directory
# COPY ./package*.json ./

# # Install the dependencies
# RUN npm install

# # Copy the remaining application files to the working directory
# COPY . .

# # Build the application
# RUN npm run build

# # Expose port 3000 for the application
# EXPOSE 3000

# # Start the application
# CMD [ "npm", "run", "start" ]